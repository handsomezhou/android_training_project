package com.example.tetris.view;

import com.example.tetris.R;
import com.example.tetris.board.GameService;
import com.example.tetris.object.GameConfig;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.util.AttributeSet;
import android.view.GestureDetector;
import android.view.GestureDetector.OnGestureListener;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnTouchListener;
import android.widget.ImageView;
import android.widget.Toast;

public class GameView extends ImageView implements OnGestureListener,
		OnTouchListener {
	private static final int BLOCK_TYPE_NUM = 7;
	GestureDetector mGestureDetector;
	// 游戏逻辑的实现类
	private GameService gameService = null;
	// 俄罗斯方块图片
	private Bitmap []block_color=new Bitmap[gameConfig.BLOCK_TYPE_NUM];

	public GameView(Context context, AttributeSet attrs) {
		super(context, attrs);
		mGestureDetector = new GestureDetector(context, this);
	
		System.out.printf("GameView..................\n");
		//this.setGameService(gameService);
		

		// TODO Auto-generated constructor stub
	}

	@Override
	public boolean onFling(MotionEvent e1, MotionEvent e2, float velocityX,
			float velocityY) {
		// TODO Auto-generated method stub
		float distance = e2.getX() - e1.getX();
		if (distance > 0) {
			Toast.makeText(getContext(), "I'm onFling!---right",
					Toast.LENGTH_SHORT).show();
		} else {
			Toast.makeText(getContext(), "I'm onFling!---left",
					Toast.LENGTH_SHORT).show();
		}

		return true;
	}

	@Override
	public boolean onDown(MotionEvent e) {
		// TODO Auto-generated method stub
		// TextView test = new TextView(getContext());
		// st.setText("I'm onDown");
		// System.out.println("I'm onDown");
		// TextView test=(TextView) findViewById(R.id.next_block);
		// .setText("I'm onDown");

		System.out.println("---------------------");
		Toast.makeText(getContext(), "I'm onDown!", Toast.LENGTH_SHORT).show();
		return true;
	}

	@Override
	public void onLongPress(MotionEvent e) {
		// TODO Auto-generated method stub
		Toast.makeText(getContext(), "I'm onLongPress!", Toast.LENGTH_SHORT)
				.show();
	}

	@Override
	public boolean onScroll(MotionEvent e1, MotionEvent e2, float distanceX,
			float distanceY) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public void onShowPress(MotionEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public boolean onSingleTapUp(MotionEvent e) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean onTouch(View v, MotionEvent event) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean onTouchEvent(MotionEvent event) {
		// TODO Auto-generated method stub

		mGestureDetector.onTouchEvent(event);

		return true;
	}

	@Override
	protected void onDraw(Canvas canvas) {
		// TODO Auto-generated method stub
		super.onDraw(canvas);
		if ((this.gameService == null)||this.gameConfig==null)
			return;
		// /*

		Block[][] block = gameService.getBlocks();

		Bitmap bm = BitmapFactory.decodeResource(this.getResources(),
				R.drawable.block_blue);
		// canvas.drawBitmap(bm, 100, 100, null);
		int[] location = new int[2];
		this.getLocationInWindow(location);
		int y = 0;
		int x = 0;
		if (null != block) {
			for (int i = 0; i < block.length; i++) {
				for (int j = 0; j < block[i].length; j++) {

					// canvas.drawBitmap(bm, this.getLeft() +
					// block[i][j].getIndexX() * 38,
					// this.getTop() + block[i][j].getIndexY() * 38, null);

					canvas.drawBitmap(bm,
							this.getLeft() + 13 + block[i][j].getIndexX() * 36,
							this.getTop() + 16 + block[i][j].getIndexY() * 36,
							null);

				}

			}
		}

		// */
		System.out.printf("on Draw++++++++++++++++++++++++++++");
	}

	public void setGameService(GameService gameService) {
		this.gameService = gameService;
	}
	/*
	public void setGameConfig(GameConfig gameConfig)
	{
		this.gameConfig=gameConfig;
	}
	*/
}
